name: Deploy Main
on:
  release:
    types: [published]
jobs:
  deploy-pypi:
    runs-on: ubuntu-latest
    env:
      PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
      PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v3

      - name: Install Twine
        run: sudo pip install twine wheel

      - name: Create the distribution
        run: |
          git fetch --prune --unshallow --tags
          sudo python setup.py sdist bdist_wheel
      - name: Push to PyPI
        run: sudo twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/*

  deploy-conda:
    runs-on: ubuntu-latest
# sets default shell to remove need for source to run the conda shell
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v3

      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""
          miniconda-version: "latest"

      - name: Install the Conda Dependencies
        run: |
          conda config --set always_yes yes --set auto_update_conda false
          conda update conda
          conda install conda-build

# echo yes before login to prevent anaconda bug breaking automation
# git tags MUST be fetched otherwise output will be blank
# bash variables cannot be used in github actions, must use actions specific syntax and methods
      - name: Build the Anaconda Package
        id: condabuild
        env:
          ANACONDA_USERNAME: ${{ secrets.ANACONDA_CLOUD_USERNAME }}
          ANACONDA_PASSWORD: ${{ secrets.ANACONDA_CLOUD_PASSWORD }}
        run: |
          conda install anaconda-client
          conda config --set anaconda_upload no
          echo yes | anaconda login --username $ANACONDA_USERNAME --password $ANACONDA_PASSWORD
          git fetch --prune --unshallow --tags
          VERSION_FROM_GIT_TAG=$(git tag --list "v*[0-9]" --sort=version:refname | tail -1 | cut -c 2-) conda build . -c stanfordcvxgrp -c conda-forge --numpy 1.22.2
          echo "GIT_VERSION=$(git tag --list 'v*[0-9]' --sort=version:refname | tail -1 | cut -c 2-)" >> $GITHUB_ENV
      - name: Upload the Anaconda Package
        id: condaload
        env:
          ANACONDA_USERNAME: ${{ secrets.ANACONDA_CLOUD_USERNAME }}
          ANACONDA_PASSWORD: ${{ secrets.ANACONDA_CLOUD_PASSWORD }}
        run: |
          anaconda upload -u stanfordcvxgrp /usr/share/miniconda3/conda-bld/noarch/fastpathplanning-${{ env.GIT_VERSION }}-*.tar.bz2
